nextflow.enable.dsl=2

params.input_dir = "/fasta_files"
params.sample_names = ["sample1", "sample2", "sample3", "sample4", "sample5", "sample6"]
params.replicate_info = ["1", "1", "1", "2", "2", "2"]

input_files = files("${params.input_dir}/*.fastq.gz")

process read_map {
    input:
        tuple val(input), path(input_files)

    output:
        tuple val(input), path("${params.input_dir}/${input}_salmon")

    shell:
        """
        salmon quant -i /index -p 20 --validateMappings --writeUnmappedNames -l A -r ${input} -o ${output}
        """
}

process trim {
    input:
        tuple val(salmon_output_file), path("${params.input_dir}/*_salmon/quant.sf")
    
    output:
        tuple val(salmon_output_file), path("${params.input_dir}/${salmon_output_file}_trimmed")

    shell:
        """
        trim_galore -q 20 --length 50 --fastqc --illumina --stringency 3 ${salmon_output_file} -o ${output}
        """
}

process generate_reads {
    input:
        tuple val(trimmed_file), path("${params.input_dir}/*_trimmed")

    output:
        tuple val(trimmed_file), path("${params.input_dir}/${trimmed_file.baseName}_reads.csv")

    script:
        """
        Rscript generate_reads.R ${trimmed_file} ${output} ${params.sample_names} ${params.replicate_info}
        """
}

process diff_exp {
    input:
        tuple val(reads_file), path("${params.input_dir}/*_reads.csv")

    output:
        tuple val(reads_file), path("${params.input_dir}/${reads_file.baseName}_diff_exp.csv")

    script:
        """
        Rscript diff_exp.R ${reads_file} ${output} ${params.sample_names} ${params.replicate_info}
        """
}

process go_kegg {
    input:
        tuple val(diff_exp_file), path("${params.input_dir}/*_diff_exp.csv")

    output:
        tuple val(diff_exp_file), path("${params.input_dir}/${diff_exp_file.baseName}_go_kegg.csv")

    script:
        """
        Rscript go_kegg.R ${diff_exp_file} ${output}
        """
}

workflow {
    read_map(input_files)
    trim("${params.input_dir}/*_salmon/quant.sf")
    generate_reads("${params.input_dir}/*_trimmed")
    diff_exp("${params.input_dir}/*_reads.csv")
    go_kegg("${params.input_dir}/*_diff_exp.csv")
}
